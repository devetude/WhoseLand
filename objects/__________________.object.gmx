<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_robopia_card</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 메세지를 숨김처리
global.is_show_robopia_message = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 딜레이를 모두 소진했을 경우 다시 fale로 바꿈
is_delayed_now = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 메세지 전달 후 메세지를 비움
global.robopia_message = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 생산 예정 인덱스를 현재 캐릭터 인덱스로 변경
global.selected_robopia_character_index = character_index;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 딜레이가 걸려있는 경우가 아닌 경우에만
if(!is_delayed_now) {
    // 딜레이 설정
    is_delayed_now = true;
    
    // 자원이 코스트 보다 많을 경우에만
    if(global.robopia_resource &gt;= character_cost) {
        // 메세지를 담는 변수
        global.robopia_message = "";
        
        // 자원을 사용한 코스트 만큼 감소시킴
        global.robopia_resource -= character_cost;
        
        // 랜덤 값으로 캐릭터 인덱스 설정
        randomize();
        character_index = round(irandom_range(0, 4));
        
        // 카드 선택 상태를 나타내는 변수
        global.selected_robopia_character_index = 0;
        
        // 캐릭터의 인덱스에 맞는 설정 값들을 설정
        switch(character_index) {
            case 0:
            character_spr = spr_robopia_character_1;
            character_cost = 5;
            break;
            
            case 1:
            character_spr = spr_robopia_character_2;
            character_cost = 7;
            break;
            
            case 2:
            character_spr = spr_robopia_character_3;
            character_cost = 9;
            break;
            
            case 3:
            character_spr = spr_robopia_character_4;
            character_cost = 3;
            break;
            
            case 4:
            character_spr = spr_robopia_character_5;
            character_cost = 1;
            break;
        }
    }
    
    else {
        global.robopia_message = "대장, 유닛 배치를 위한 " + string(character_cost - global.robopia_resource) + "만큼의 자원이 부족합니다!";
        alarm[0] = 30;
    }
    
    alarm[1] = 15;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
