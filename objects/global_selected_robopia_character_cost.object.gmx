<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_robopia_card</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 랜덤 값으로 캐릭터 인덱스 설정
randomize();
character_index = round(irandom_range(0, 4));

// 현재 처리중인 상태를 나타내는 변수 
is_delayed_now = false;

// 캐릭터의 인덱스에 맞는 설정 값들을 설정
switch(character_index) {
    case 0:
    character_spr = spr_robopia_character_1;
    character_cost = 5;
    break;
    
    case 1:
    character_spr = spr_robopia_character_2;
    character_cost = 7;
    break;
    
    case 2:
    character_spr = spr_robopia_character_3;
    character_cost = 9;
    break;
    
    case 3:
    character_spr = spr_robopia_character_4;
    character_cost = 3;
    break;
    
    case 4:
    character_spr = spr_robopia_character_5;
    character_cost = 1;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 딜레이를 모두 소진했을 경우 다시 fale로 바꿈
is_delayed_now = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 메세지 전달 후 메세지를 비움
global.robopia_message = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 생산 예정 인덱스를 현재 카드 인덱스로 변경
global.selected_robopia_card_index = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 생산이 가능한 캐릭터인 경우
if(global.robopia_resource &gt;= character_cost) {
    draw_self();
    draw_sprite(spr_robopia_character_card, character_index, x + 16, y + 16); 
    draw_sprite(spr_robopia_cost, character_cost - 1, x + 32, y + 32);   
}

else {
    draw_sprite_ext(spr_robopia_card, 0, x, y, 1, 1, 0, c_gray, 0.7);
    draw_sprite_ext(spr_robopia_character_card, character_index, x + 16, y + 16, 1, 1, 0, c_gray, 0.7); 
    draw_sprite_ext(spr_robopia_cost, character_cost - 1, x + 32, y + 32, 1, 1, 0, c_gray, 0.7); 
}

// 현재 카드가 선택된 경우
if(global.selected_robopia_card_index == 1) {
    draw_set_colour(c_red);
    draw_rectangle(x + 2, y + 2, x + 62, y + 62, true);
}

// 전달 할 메세지가 있는 경우
if(global.robopia_message != "") {
    draw_set_font(f_message);
    draw_text_outlined(6, 116, c_black, c_white, global.robopia_message);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
